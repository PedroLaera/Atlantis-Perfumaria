services:
  database:
    image: mysql:8.0
    container_name: mysql-container
    restart: always
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DB_NAME}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 5

  backend:
    build: ./Project5
    container_name: backend
    depends_on:
      database:
        condition: service_healthy
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DB_NAME: ${MYSQL_DB_NAME}
      MYSQL_HOST: ${MYSQL_HOST}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
      JWT_ISSUER: ${JWT_ISSUER}
    networks:
      - app-network

  frontend:
    build: ./Front
    container_name: frontend
    env_file:
      - ./Front/.env
    depends_on:
      - backend
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/atlantisperfumaria.crt:/etc/nginx/atlantisperfumaria.crt:ro
      - ./nginx/chave.pem:/etc/nginx/chave.pem:ro
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

volumes:
  db_data:
    driver: local

networks:
  app-network:
    driver: bridge
